#include <iostream>
#include <vector>
#include <string>
using namespace std;

struct Task {
    string description;
    bool isCompleted;
};

class ToDoListManager {
private:
    vector<Task> tasks;

public:
    void addtask(string& taskdescription) {
        getline(cin, taskdescription);
        tasks.push_back({taskdescription, false});
        cout << "Task added successfully!" << endl;
    }

    void viewtasks() const {
        if (tasks.empty()) {
            cout << "The to-do list is empty." << endl;
            return;
        }

        cout << "Your To-Do List:" << endl;
        for (int i = 0; i < tasks.size(); i++) {
            cout << i + 1 << ". [" << (tasks[i].isCompleted ? "Completed" : "Pending") << "] " << tasks[i].description << endl;
        }
    }

    void marktaskascompleted(int index) {
        if (index == 0 || index > tasks.size()) {
            cout << "Invalid task number." << endl;
            return;
        }

        tasks[index - 1].isCompleted = true;
        cout << "Task marked as completed!" << endl;
    }

    void removetask(int index) {
        if (index == 0 || index > tasks.size()) {
            cout << "Invalid task number." << endl;
            return;
        }

        tasks.erase(tasks.begin() + index - 1);
        cout << "Task removed successfully!" << endl;
    }
};

int main() {
    ToDoListManager manager;
    int choice;

    do {
        cout << "\n";
        cout << "To-Do List Manager" << endl;
        cout << "1. Add Task" << endl;
        cout << "2. View Tasks" << endl;
        cout << "3. Mark Task as Completed" << endl;
        cout << "4. Remove Task" << endl;
        cout << "5. Exit" << endl;
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1: {
                cout << "Enter the task description: ";
                string taskdescription;
                getline(cin, taskdescription);
                manager.addtask(taskdescription);
                break;
            }
            case 2:
                manager.viewtasks();
                break;
            case 3: {
                cout << "Enter the task number to mark as completed: ";
                int taskNumber;
                cin >> taskNumber;
                manager.marktaskascompleted(taskNumber);
                break;
            }
            case 4: {
                cout << "Enter the task number to remove: ";
                int taskNumber;
                cin >> taskNumber;
                manager.removetask(taskNumber);
                break;
            }
            case 5:
                cout << "Exiting the program. Goodbye!" << endl;
                break;
            default:
                cout << "Invalid choice. Please try again." << endl;
        }
    } while (choice != 5);
    return 0;
}
